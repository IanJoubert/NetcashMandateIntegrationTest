//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NiwsMandateTest
{
    using System;
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LimitResponse", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public partial class LimitResponse : object
    {
        
        private NiwsMandateTest.Errors ErrorsField;
        
        private NiwsMandateTest.Limits LimitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NiwsMandateTest.Errors Errors
        {
            get
            {
                return this.ErrorsField;
            }
            set
            {
                this.ErrorsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NiwsMandateTest.Limits Limits
        {
            get
            {
                return this.LimitsField;
            }
            set
            {
                this.LimitsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Errors", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public partial class Errors : object
    {
        
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Limits", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public partial class Limits : object
    {
        
        private decimal DailyLimitField;
        
        private decimal LineLimitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyLimit
        {
            get
            {
                return this.DailyLimitField;
            }
            set
            {
                this.DailyLimitField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineLimit
        {
            get
            {
                return this.LineLimitField;
            }
            set
            {
                this.LineLimitField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MerchantStatementSourceStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public partial class MerchantStatementSourceStatusResponse : object
    {
        
        private bool CreditCardsProcessedField;
        
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditCardsProcessed
        {
            get
            {
                return this.CreditCardsProcessedField;
            }
            set
            {
                this.CreditCardsProcessedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MandateOptions.MandateDebitFrequency", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public enum MandateOptionsMandateDebitFrequency : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bimonthly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreeMonthly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SixMonthly = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Annually = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Biweekly = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MandateOptions.MandatePublicHolidayOption", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public enum MandateOptionsMandatePublicHolidayOption : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrecedingOrdinaryBusinessDay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeryNextOrdinaryBusinessDay = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MandateOptions.BankAccountType", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public enum MandateOptionsBankAccountType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Savings = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transmission = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PredefinedPayment = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MandateOptions.Title", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public enum MandateOptionsTitle : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mr = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mrs = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Miss = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dr = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prof = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ms = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rabbi = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ds = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Adv = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NIWSResponseContainer", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NiwsMandateTest.AddMandateResponse))]
    public partial class NIWSResponseContainer : object
    {
        
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddMandateResponse", Namespace="http://schemas.datacontract.org/2004/07/NC.DG.TMS.C.WCF.NIWS")]
    public partial class AddMandateResponse : NiwsMandateTest.NIWSResponseContainer
    {
        
        private System.Collections.Generic.List<string> ErrorsField;
        
        private string MandateUrlField;
        
        private System.Collections.Generic.List<string> WarningsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Errors
        {
            get
            {
                return this.ErrorsField;
            }
            set
            {
                this.ErrorsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MandateUrl
        {
            get
            {
                return this.MandateUrlField;
            }
            set
            {
                this.MandateUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Warnings
        {
            get
            {
                return this.WarningsField;
            }
            set
            {
                this.WarningsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NiwsMandateTest.INIWS_NIF")]
    public interface INIWS_NIF
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/GetPaymentLimits", ReplyAction="http://tempuri.org/INIWS_NIF/GetPaymentLimitsResponse")]
        System.Threading.Tasks.Task<NiwsMandateTest.LimitResponse> GetPaymentLimitsAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/GetDebitLimits", ReplyAction="http://tempuri.org/INIWS_NIF/GetDebitLimitsResponse")]
        System.Threading.Tasks.Task<NiwsMandateTest.LimitResponse> GetDebitLimitsAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/AccountFundsRelease", ReplyAction="http://tempuri.org/INIWS_NIF/AccountFundsReleaseResponse")]
        System.Threading.Tasks.Task<string> AccountFundsReleaseAsync(string ServiceKey, string Date, long AmountInCents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestActionDate", ReplyAction="http://tempuri.org/INIWS_NIF/RequestActionDateResponse")]
        System.Threading.Tasks.Task<string> RequestActionDateAsync(string ServiceKey, string Date, string Instruction, string ForwardActionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestInterimMerchantStatement", ReplyAction="http://tempuri.org/INIWS_NIF/RequestInterimMerchantStatementResponse")]
        System.Threading.Tasks.Task<string> RequestInterimMerchantStatementAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestMerchantStatement", ReplyAction="http://tempuri.org/INIWS_NIF/RequestMerchantStatementResponse")]
        System.Threading.Tasks.Task<string> RequestMerchantStatementAsync(string ServiceKey, string FromActionDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RetrieveMerchantStatement", ReplyAction="http://tempuri.org/INIWS_NIF/RetrieveMerchantStatementResponse")]
        System.Threading.Tasks.Task<string> RetrieveMerchantStatementAsync(string ServiceKey, string PollingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestTransactionTypes", ReplyAction="http://tempuri.org/INIWS_NIF/RequestTransactionTypesResponse")]
        System.Threading.Tasks.Task<string> RequestTransactionTypesAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RetrieveTransactionTypes", ReplyAction="http://tempuri.org/INIWS_NIF/RetrieveTransactionTypesResponse")]
        System.Threading.Tasks.Task<string> RetrieveTransactionTypesAsync(string ServiceKey, string PollingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/LegacyCompactBatchFileUpload", ReplyAction="http://tempuri.org/INIWS_NIF/LegacyCompactBatchFileUploadResponse")]
        System.Threading.Tasks.Task<string> LegacyCompactBatchFileUploadAsync(string UserName, string Password, string PIN, string File, string ProcessAsLegacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/LegacyBatchFileUpload", ReplyAction="http://tempuri.org/INIWS_NIF/LegacyBatchFileUploadResponse")]
        System.Threading.Tasks.Task<string> LegacyBatchFileUploadAsync(string UserName, string Password, string PIN, string File, string ProcessAsLegacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/BatchFileUpload", ReplyAction="http://tempuri.org/INIWS_NIF/BatchFileUploadResponse")]
        System.Threading.Tasks.Task<string> BatchFileUploadAsync(string ServiceKey, string File);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestFileUploadReport", ReplyAction="http://tempuri.org/INIWS_NIF/RequestFileUploadReportResponse")]
        System.Threading.Tasks.Task<string> RequestFileUploadReportAsync(string ServiceKey, string FileToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestCombinedUploadReportForDate", ReplyAction="http://tempuri.org/INIWS_NIF/RequestCombinedUploadReportForDateResponse")]
        System.Threading.Tasks.Task<string> RequestCombinedUploadReportForDateAsync(string ServiceKey, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestCreditDataReport", ReplyAction="http://tempuri.org/INIWS_NIF/RequestCreditDataReportResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> RequestCreditDataReportAsync(string ServiceKey, string FileToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestAVSReport", ReplyAction="http://tempuri.org/INIWS_NIF/RequestAVSReportResponse")]
        System.Threading.Tasks.Task<string> RequestAVSReportAsync(string ServiceKey, string FileToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestPayNowInvoice", ReplyAction="http://tempuri.org/INIWS_NIF/RequestPayNowInvoiceResponse")]
        System.Threading.Tasks.Task<string> RequestPayNowInvoiceAsync(string serviceKey, string fileToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/IsValidServiceKey", ReplyAction="http://tempuri.org/INIWS_NIF/IsValidServiceKeyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> IsValidServiceKeyAsync(string MethodKey, string ServiceKey, string InstructionCode, int SofwareVendorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/AccountServiceKeys", ReplyAction="http://tempuri.org/INIWS_NIF/AccountServiceKeysResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> AccountServiceKeysAsync(string MethodKey, string AccountNo, int SoftwareVendorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/MerchantStatementSourceStatus", ReplyAction="http://tempuri.org/INIWS_NIF/MerchantStatementSourceStatusResponse")]
        System.Threading.Tasks.Task<NiwsMandateTest.MerchantStatementSourceStatusResponse> MerchantStatementSourceStatusAsync(string ServiceKey, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestDebitBatchUnauthorised", ReplyAction="http://tempuri.org/INIWS_NIF/RequestDebitBatchUnauthorisedResponse")]
        System.Threading.Tasks.Task<string> RequestDebitBatchUnauthorisedAsync(string ServiceKey, string Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RetrieveBatchStatus", ReplyAction="http://tempuri.org/INIWS_NIF/RetrieveBatchStatusResponse")]
        System.Threading.Tasks.Task<string> RetrieveBatchStatusAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RetrieveUnauthorisedBatches", ReplyAction="http://tempuri.org/INIWS_NIF/RetrieveUnauthorisedBatchesResponse")]
        System.Threading.Tasks.Task<string> RetrieveUnauthorisedBatchesAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestBatchAuthorise", ReplyAction="http://tempuri.org/INIWS_NIF/RequestBatchAuthoriseResponse")]
        System.Threading.Tasks.Task<string> RequestBatchAuthoriseAsync(string ServiceKey, System.Guid BatchIndicator, bool SendEmail, string FromName, string FromAddress, bool SendSMS, bool ReleaseFunds, bool BankTransfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RequestMandateData", ReplyAction="http://tempuri.org/INIWS_NIF/RequestMandateDataResponse")]
        System.Threading.Tasks.Task<string> RequestMandateDataAsync(string ServiceKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RetrieveMandateData", ReplyAction="http://tempuri.org/INIWS_NIF/RetrieveMandateDataResponse")]
        System.Threading.Tasks.Task<string> RetrieveMandateDataAsync(string ServiceKey, string FileToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/RetrieveMandatePDF", ReplyAction="http://tempuri.org/INIWS_NIF/RetrieveMandatePDFResponse")]
        System.Threading.Tasks.Task<string> RetrieveMandatePDFAsync(string ServiceKey, string FileToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INIWS_NIF/AddMandate", ReplyAction="http://tempuri.org/INIWS_NIF/AddMandateResponse")]
        System.Threading.Tasks.Task<NiwsMandateTest.AddMandateResponse> AddMandateAsync(
                    string ServiceKey, 
                    string AccountReference, 
                    string MandateName, 
                    decimal MandateAmount, 
                    bool IsConsumer, 
                    string FirstName, 
                    string Surname, 
                    string TradingName, 
                    string RegistrationNumber, 
                    string RegisteredName, 
                    string MobileNumber, 
                    NiwsMandateTest.MandateOptionsMandateDebitFrequency DebitFrequency, 
                    int CommencementMonth, 
                    string CommencementDay, 
                    string AgreementDate, 
                    string AgreementReferenceNumber, 
                    int CancellationNoticePeriod, 
                    NiwsMandateTest.MandateOptionsMandatePublicHolidayOption PublicHolidayOption, 
                    string Notes, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    string Field6, 
                    string Field7, 
                    string Field8, 
                    string Field9, 
                    System.Nullable<bool> AllowVariableDebitAmounts, 
                    System.Nullable<int> BankDetailType, 
                    string BankAccountName, 
                    string BankAccountNumber, 
                    string BranchCode, 
                    System.Nullable<NiwsMandateTest.MandateOptionsBankAccountType> BankAccountType, 
                    string CreditCardToken, 
                    System.Nullable<int> CreditCardType, 
                    System.Nullable<int> ExpiryMonth, 
                    System.Nullable<int> ExpiryYear, 
                    System.Nullable<bool> IsIdNumber, 
                    System.Nullable<NiwsMandateTest.MandateOptionsTitle> Title, 
                    string EmailAddress, 
                    string PhoneNumber, 
                    string DateOfBirth, 
                    string DecemberDebitDay, 
                    string DebitMasterfileGroup, 
                    string PhysicalAddressLine1, 
                    string PhysicalAddressLine2, 
                    string PhysicalAddressLine3, 
                    string PhysicalSuburb, 
                    string PhysicalCity, 
                    string PhysicalProvince, 
                    string PhysicalPostalCode, 
                    System.Nullable<bool> MandateActive, 
                    System.Nullable<bool> RequestAVS);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface INIWS_NIFChannel : NiwsMandateTest.INIWS_NIF, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class NIWS_NIFClient : System.ServiceModel.ClientBase<NiwsMandateTest.INIWS_NIF>, NiwsMandateTest.INIWS_NIF
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NIWS_NIFClient() : 
                base(NIWS_NIFClient.GetDefaultBinding(), NIWS_NIFClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_INIWS_NIF.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NIWS_NIFClient(EndpointConfiguration endpointConfiguration) : 
                base(NIWS_NIFClient.GetBindingForEndpoint(endpointConfiguration), NIWS_NIFClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NIWS_NIFClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NIWS_NIFClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NIWS_NIFClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NIWS_NIFClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NIWS_NIFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<NiwsMandateTest.LimitResponse> GetPaymentLimitsAsync(string ServiceKey)
        {
            return base.Channel.GetPaymentLimitsAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<NiwsMandateTest.LimitResponse> GetDebitLimitsAsync(string ServiceKey)
        {
            return base.Channel.GetDebitLimitsAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<string> AccountFundsReleaseAsync(string ServiceKey, string Date, long AmountInCents)
        {
            return base.Channel.AccountFundsReleaseAsync(ServiceKey, Date, AmountInCents);
        }
        
        public System.Threading.Tasks.Task<string> RequestActionDateAsync(string ServiceKey, string Date, string Instruction, string ForwardActionDate)
        {
            return base.Channel.RequestActionDateAsync(ServiceKey, Date, Instruction, ForwardActionDate);
        }
        
        public System.Threading.Tasks.Task<string> RequestInterimMerchantStatementAsync(string ServiceKey)
        {
            return base.Channel.RequestInterimMerchantStatementAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<string> RequestMerchantStatementAsync(string ServiceKey, string FromActionDate)
        {
            return base.Channel.RequestMerchantStatementAsync(ServiceKey, FromActionDate);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMerchantStatementAsync(string ServiceKey, string PollingId)
        {
            return base.Channel.RetrieveMerchantStatementAsync(ServiceKey, PollingId);
        }
        
        public System.Threading.Tasks.Task<string> RequestTransactionTypesAsync(string ServiceKey)
        {
            return base.Channel.RequestTransactionTypesAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveTransactionTypesAsync(string ServiceKey, string PollingId)
        {
            return base.Channel.RetrieveTransactionTypesAsync(ServiceKey, PollingId);
        }
        
        public System.Threading.Tasks.Task<string> LegacyCompactBatchFileUploadAsync(string UserName, string Password, string PIN, string File, string ProcessAsLegacy)
        {
            return base.Channel.LegacyCompactBatchFileUploadAsync(UserName, Password, PIN, File, ProcessAsLegacy);
        }
        
        public System.Threading.Tasks.Task<string> LegacyBatchFileUploadAsync(string UserName, string Password, string PIN, string File, string ProcessAsLegacy)
        {
            return base.Channel.LegacyBatchFileUploadAsync(UserName, Password, PIN, File, ProcessAsLegacy);
        }
        
        public System.Threading.Tasks.Task<string> BatchFileUploadAsync(string ServiceKey, string File)
        {
            return base.Channel.BatchFileUploadAsync(ServiceKey, File);
        }
        
        public System.Threading.Tasks.Task<string> RequestFileUploadReportAsync(string ServiceKey, string FileToken)
        {
            return base.Channel.RequestFileUploadReportAsync(ServiceKey, FileToken);
        }
        
        public System.Threading.Tasks.Task<string> RequestCombinedUploadReportForDateAsync(string ServiceKey, string Date)
        {
            return base.Channel.RequestCombinedUploadReportForDateAsync(ServiceKey, Date);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> RequestCreditDataReportAsync(string ServiceKey, string FileToken)
        {
            return base.Channel.RequestCreditDataReportAsync(ServiceKey, FileToken);
        }
        
        public System.Threading.Tasks.Task<string> RequestAVSReportAsync(string ServiceKey, string FileToken)
        {
            return base.Channel.RequestAVSReportAsync(ServiceKey, FileToken);
        }
        
        public System.Threading.Tasks.Task<string> RequestPayNowInvoiceAsync(string serviceKey, string fileToken)
        {
            return base.Channel.RequestPayNowInvoiceAsync(serviceKey, fileToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> IsValidServiceKeyAsync(string MethodKey, string ServiceKey, string InstructionCode, int SofwareVendorCode)
        {
            return base.Channel.IsValidServiceKeyAsync(MethodKey, ServiceKey, InstructionCode, SofwareVendorCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> AccountServiceKeysAsync(string MethodKey, string AccountNo, int SoftwareVendorCode)
        {
            return base.Channel.AccountServiceKeysAsync(MethodKey, AccountNo, SoftwareVendorCode);
        }
        
        public System.Threading.Tasks.Task<NiwsMandateTest.MerchantStatementSourceStatusResponse> MerchantStatementSourceStatusAsync(string ServiceKey, string Date)
        {
            return base.Channel.MerchantStatementSourceStatusAsync(ServiceKey, Date);
        }
        
        public System.Threading.Tasks.Task<string> RequestDebitBatchUnauthorisedAsync(string ServiceKey, string Date)
        {
            return base.Channel.RequestDebitBatchUnauthorisedAsync(ServiceKey, Date);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveBatchStatusAsync(string ServiceKey)
        {
            return base.Channel.RetrieveBatchStatusAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveUnauthorisedBatchesAsync(string ServiceKey)
        {
            return base.Channel.RetrieveUnauthorisedBatchesAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<string> RequestBatchAuthoriseAsync(string ServiceKey, System.Guid BatchIndicator, bool SendEmail, string FromName, string FromAddress, bool SendSMS, bool ReleaseFunds, bool BankTransfer)
        {
            return base.Channel.RequestBatchAuthoriseAsync(ServiceKey, BatchIndicator, SendEmail, FromName, FromAddress, SendSMS, ReleaseFunds, BankTransfer);
        }
        
        public System.Threading.Tasks.Task<string> RequestMandateDataAsync(string ServiceKey)
        {
            return base.Channel.RequestMandateDataAsync(ServiceKey);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMandateDataAsync(string ServiceKey, string FileToken)
        {
            return base.Channel.RetrieveMandateDataAsync(ServiceKey, FileToken);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMandatePDFAsync(string ServiceKey, string FileToken)
        {
            return base.Channel.RetrieveMandatePDFAsync(ServiceKey, FileToken);
        }
        
        public System.Threading.Tasks.Task<NiwsMandateTest.AddMandateResponse> AddMandateAsync(
                    string ServiceKey, 
                    string AccountReference, 
                    string MandateName, 
                    decimal MandateAmount, 
                    bool IsConsumer, 
                    string FirstName, 
                    string Surname, 
                    string TradingName, 
                    string RegistrationNumber, 
                    string RegisteredName, 
                    string MobileNumber, 
                    NiwsMandateTest.MandateOptionsMandateDebitFrequency DebitFrequency, 
                    int CommencementMonth, 
                    string CommencementDay, 
                    string AgreementDate, 
                    string AgreementReferenceNumber, 
                    int CancellationNoticePeriod, 
                    NiwsMandateTest.MandateOptionsMandatePublicHolidayOption PublicHolidayOption, 
                    string Notes, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    string Field6, 
                    string Field7, 
                    string Field8, 
                    string Field9, 
                    System.Nullable<bool> AllowVariableDebitAmounts, 
                    System.Nullable<int> BankDetailType, 
                    string BankAccountName, 
                    string BankAccountNumber, 
                    string BranchCode, 
                    System.Nullable<NiwsMandateTest.MandateOptionsBankAccountType> BankAccountType, 
                    string CreditCardToken, 
                    System.Nullable<int> CreditCardType, 
                    System.Nullable<int> ExpiryMonth, 
                    System.Nullable<int> ExpiryYear, 
                    System.Nullable<bool> IsIdNumber, 
                    System.Nullable<NiwsMandateTest.MandateOptionsTitle> Title, 
                    string EmailAddress, 
                    string PhoneNumber, 
                    string DateOfBirth, 
                    string DecemberDebitDay, 
                    string DebitMasterfileGroup, 
                    string PhysicalAddressLine1, 
                    string PhysicalAddressLine2, 
                    string PhysicalAddressLine3, 
                    string PhysicalSuburb, 
                    string PhysicalCity, 
                    string PhysicalProvince, 
                    string PhysicalPostalCode, 
                    System.Nullable<bool> MandateActive, 
                    System.Nullable<bool> RequestAVS)
        {
            return base.Channel.AddMandateAsync(ServiceKey, AccountReference, MandateName, MandateAmount, IsConsumer, FirstName, Surname, TradingName, RegistrationNumber, RegisteredName, MobileNumber, DebitFrequency, CommencementMonth, CommencementDay, AgreementDate, AgreementReferenceNumber, CancellationNoticePeriod, PublicHolidayOption, Notes, Field1, Field2, Field3, Field4, Field5, Field6, Field7, Field8, Field9, AllowVariableDebitAmounts, BankDetailType, BankAccountName, BankAccountNumber, BranchCode, BankAccountType, CreditCardToken, CreditCardType, ExpiryMonth, ExpiryYear, IsIdNumber, Title, EmailAddress, PhoneNumber, DateOfBirth, DecemberDebitDay, DebitMasterfileGroup, PhysicalAddressLine1, PhysicalAddressLine2, PhysicalAddressLine3, PhysicalSuburb, PhysicalCity, PhysicalProvince, PhysicalPostalCode, MandateActive, RequestAVS);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INIWS_NIF))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INIWS_NIF))
            {
                return new System.ServiceModel.EndpointAddress("https://ws.netcash.co.za/NIWS/NIWS_NIF.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return NIWS_NIFClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INIWS_NIF);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return NIWS_NIFClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INIWS_NIF);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_INIWS_NIF,
        }
    }
}
